// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders button with an accessibility hint 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityHint="hint"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "borderColor": "gray",
        "borderRadius": 0,
        "borderWidth": 0,
        "opacity": 1,
      }
    }
    testID="button"
  >
    <Text
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "padding": 10,
          },
          {
            "color": "#000000",
          },
        ]
      }
      testID="button-text"
    />
  </View>
</View>
`;

exports[`renders button with an accessibility label 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityLabel="label"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "borderColor": "gray",
        "borderRadius": 0,
        "borderWidth": 0,
        "opacity": 1,
      }
    }
    testID="button"
  >
    <Text
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "padding": 10,
          },
          {
            "color": "#000000",
          },
        ]
      }
      testID="button-text"
    />
  </View>
</View>
`;

exports[`renders button with custom testID 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "borderColor": "gray",
        "borderRadius": 0,
        "borderWidth": 0,
        "opacity": 1,
      }
    }
    testID="custom:testID"
  >
    <Text
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "padding": 10,
          },
          {
            "color": "#000000",
          },
        ]
      }
      testID="custom:testID-text"
    >
      helloworld
    </Text>
  </View>
</View>
`;

exports[`renders contained button with mode 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "borderColor": "gray",
        "borderRadius": 5,
        "borderWidth": 1,
        "opacity": 1,
      }
    }
    testID="button"
  >
    <Text
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "padding": 10,
          },
          {
            "color": "#000000",
          },
        ]
      }
      testID="button-text"
    >
      helloworld
    </Text>
  </View>
</View>
`;

exports[`renders disabled button 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 0,
        "borderWidth": 0,
        "opacity": 1,
      }
    }
    testID="button"
  >
    <Text
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "padding": 10,
          },
          {
            "color": "#000000",
          },
        ]
      }
      testID="button-text"
    >
      helloworld
    </Text>
  </View>
</View>
`;

exports[`renders text button by default 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "borderColor": "gray",
        "borderRadius": 0,
        "borderWidth": 0,
        "opacity": 1,
      }
    }
    testID="button"
  >
    <Text
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "padding": 10,
          },
          {
            "color": "#000000",
          },
        ]
      }
      testID="button-text"
    >
      helloworld
    </Text>
  </View>
</View>
`;

exports[`renders text button with mode 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "borderColor": "gray",
        "borderRadius": 0,
        "borderWidth": 0,
        "opacity": 1,
      }
    }
    testID="button"
  >
    <Text
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
            "padding": 10,
          },
          {
            "color": "#000000",
          },
        ]
      }
      testID="button-text"
    >
      helloworld
    </Text>
  </View>
</View>
`;
